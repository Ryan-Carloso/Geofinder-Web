{"ast":null,"code":"var _jsxFileName = \"/Users/ryancarlos/geo-finder-web/src/FirebaseCodeGenerator.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FirebaseCodeGenerator = () => {\n  _s();\n  const [code, setCode] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const generateRandomCode = () => {\n    const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%';\n    const length = 10;\n    let generatedCode = '';\n    for (let i = 0; i < length; i++) {\n      const randomIndex = Math.floor(Math.random() * characters.length);\n      generatedCode += characters[randomIndex];\n    }\n    return generatedCode;\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      // Gerar código aleatório\n      const generatedCode = generateRandomCode();\n\n      // Atualizar o estado com o código gerado\n      setCode(generatedCode);\n\n      // Obter localização do usuário\n      if ('geolocation' in navigator) {\n        navigator.geolocation.getCurrentPosition(async position => {\n          const {\n            latitude,\n            longitude\n          } = position.coords;\n\n          // Dados a serem enviados\n          const data = {\n            code: generatedCode,\n            latitude: latitude,\n            longitude: longitude\n          };\n\n          // URL com identificador único\n          const url = `https://geo-finder-7e641-default-rtdb.europe-west1.firebasedatabase.app/codes/${generatedCode}.json`;\n\n          // Envia os dados usando Axios com o método PUT\n          await axios.put(url, data);\n          setSuccessMessage('Código enviado com sucesso!');\n        }, error => {\n          console.error('Erro ao obter localização:', error);\n          setErrorMessage('Ocorreu um erro ao obter sua localização. Por favor, tente novamente.');\n        });\n      } else {\n        setErrorMessage('Geolocalização não suportada pelo seu navegador.');\n      }\n    } catch (error) {\n      console.error('Erro ao enviar código para o Firebase:', error);\n      setErrorMessage('Ocorreu um erro ao enviar o código. Por favor, tente novamente.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Gerador de C\\xF3digo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"C\\xF3digo Gerado:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: code,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Gerar e Enviar para o Firebase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'green'\n      },\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 26\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(FirebaseCodeGenerator, \"Vj8mN0QI60+j3H6k0Ej5YksnJLU=\");\n_c = FirebaseCodeGenerator;\nexport default FirebaseCodeGenerator;\nvar _c;\n$RefreshReg$(_c, \"FirebaseCodeGenerator\");","map":{"version":3,"names":["React","useState","axios","Link","jsxDEV","_jsxDEV","FirebaseCodeGenerator","_s","code","setCode","successMessage","setSuccessMessage","errorMessage","setErrorMessage","generateRandomCode","characters","length","generatedCode","i","randomIndex","Math","floor","random","handleSubmit","event","preventDefault","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","data","url","put","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","readOnly","style","color","_c","$RefreshReg$"],"sources":["/Users/ryancarlos/geo-finder-web/src/FirebaseCodeGenerator.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\n\nconst FirebaseCodeGenerator = () => {\n  const [code, setCode] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const generateRandomCode = () => {\n    const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%';\n    const length = 10;\n    let generatedCode = '';\n\n    for (let i = 0; i < length; i++) {\n      const randomIndex = Math.floor(Math.random() * characters.length);\n      generatedCode += characters[randomIndex];\n    }\n\n    return generatedCode;\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      // Gerar código aleatório\n      const generatedCode = generateRandomCode();\n\n      // Atualizar o estado com o código gerado\n      setCode(generatedCode);\n\n      // Obter localização do usuário\n      if ('geolocation' in navigator) {\n        navigator.geolocation.getCurrentPosition(async (position) => {\n          const { latitude, longitude } = position.coords;\n\n          // Dados a serem enviados\n          const data = {\n            code: generatedCode,\n            latitude: latitude,\n            longitude: longitude\n          };\n\n          // URL com identificador único\n          const url = `https://geo-finder-7e641-default-rtdb.europe-west1.firebasedatabase.app/codes/${generatedCode}.json`;\n\n          // Envia os dados usando Axios com o método PUT\n          await axios.put(url, data);\n\n          setSuccessMessage('Código enviado com sucesso!');\n        }, (error) => {\n          console.error('Erro ao obter localização:', error);\n          setErrorMessage('Ocorreu um erro ao obter sua localização. Por favor, tente novamente.');\n        });\n      } else {\n        setErrorMessage('Geolocalização não suportada pelo seu navegador.');\n      }\n    } catch (error) {\n      console.error('Erro ao enviar código para o Firebase:', error);\n      setErrorMessage('Ocorreu um erro ao enviar o código. Por favor, tente novamente.');\n    }\n  };\n\n  return (\n    <div>\n      <h2>Gerador de Código</h2>\n      <form onSubmit={handleSubmit}>\n        <label>\n          Código Gerado:\n          <input\n            type=\"text\"\n            value={code}\n            readOnly\n          />\n        </label>\n        <button type=\"submit\">Gerar e Enviar para o Firebase</button>\n      </form>\n      {successMessage && <p style={{ color: 'green' }}>{successMessage}</p>}\n      {errorMessage && <p style={{ color: 'red' }}>{errorMessage}</p>}\n    </div>\n  );\n};\n\nexport default FirebaseCodeGenerator;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}